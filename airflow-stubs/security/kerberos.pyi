import enum
from airflow.configuration import conf as conf
from airflow.utils.net import get_hostname as get_hostname
from typing import ClassVar

NEED_KRB181_WORKAROUND: None

class KerberosMode(enum.Enum):
    _member_names_: ClassVar[list] = ...
    _member_map_: ClassVar[dict] = ...
    _member_type_: ClassVar[type[object]] = ...
    _value2member_map_: ClassVar[dict] = ...
    STANDARD: ClassVar[KerberosMode] = ...
    ONE_TIME: ClassVar[KerberosMode] = ...
    @classmethod
    def __init__(cls, value) -> None: ...
def get_kerberos_principle(principal: str | None) -> str: ...
def renew_from_kt(principal: str | None, keytab: str, exit_on_fail: bool = ...): ...
def perform_krb181_workaround(principal: str): ...
def detect_conf_var() -> bool: ...
def run(principal: str | None, keytab: str, mode: KerberosMode = ...): ...
