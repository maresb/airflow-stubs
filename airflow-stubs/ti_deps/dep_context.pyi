import attr
from airflow.exceptions import TaskNotFound as TaskNotFound
from airflow.models.dagrun import DagRun as DagRun
from airflow.models.taskinstance import TaskInstance as TaskInstance
from airflow.utils.state import State as State
from sqlalchemy.orm.session import Session as Session

@attr.define
class DepContext:
    deps: set = ...
    flag_upstream_failed: bool = ...
    ignore_all_deps: bool = ...
    ignore_depends_on_past: bool = ...
    wait_for_past_depends_before_skipping: bool = ...
    ignore_in_retry_period: bool = ...
    ignore_in_reschedule_period: bool = ...
    ignore_task_deps: bool = ...
    ignore_ti_state: bool = ...
    ignore_unmapped_tasks: bool = ...
    finished_tis: list[TaskInstance] | None = ...
    description: str | None = ...
    have_changed_ti_states: bool = ...
    def ensure_finished_tis(self, dag_run: DagRun, session: Session) -> list[TaskInstance]: ...
