import airflow.task.task_runner.base_task_runner
from airflow.models.taskinstance import TaskReturnCode as TaskReturnCode
from airflow.task.task_runner.base_task_runner import BaseTaskRunner as BaseTaskRunner
from airflow.utils.process_utils import reap_process_group as reap_process_group, set_new_process_group as set_new_process_group

TYPE_CHECKING: bool
CAN_FORK: bool

class StandardTaskRunner(airflow.task.task_runner.base_task_runner.BaseTaskRunner):
    def __init__(self, job_runner: LocalTaskJobRunner) -> None: ...
    def start(self): ...
    def return_code(self, timeout: float = ...) -> int | None: ...
    def terminate(self): ...
    def get_process_pid(self) -> int: ...
