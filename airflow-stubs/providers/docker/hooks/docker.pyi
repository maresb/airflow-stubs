import airflow.hooks.base
import functools
from airflow.exceptions import AirflowException as AirflowException, AirflowNotFoundException as AirflowNotFoundException
from airflow.hooks.base import BaseHook as BaseHook
from docker.api.client import APIClient
from docker.tls import TLSConfig
from typing import Any, ClassVar

TYPE_CHECKING: bool
DEFAULT_TIMEOUT_SECONDS: int

class DockerHook(airflow.hooks.base.BaseHook):
    conn_name_attr: ClassVar[str] = ...
    default_conn_name: ClassVar[str] = ...
    conn_type: ClassVar[str] = ...
    hook_name: ClassVar[str] = ...
    api_client: ClassVar[functools.cached_property] = ...
    def __init__(self, docker_conn_id: str | None = ..., base_url: str | None = ..., version: str | None = ..., tls: TLSConfig | bool | None = ..., timeout: int = ...) -> None: ...
    @staticmethod
    def construct_tls_config(ca_cert: str | None = ..., client_cert: str | None = ..., client_key: str | None = ..., verify: bool = ..., assert_hostname: str | bool | None = ..., ssl_version: str | None = ...) -> TLSConfig | bool: ...
    def get_conn(self) -> APIClient: ...
    @classmethod
    def get_connection_form_widgets(cls) -> dict[str, Any]: ...
    @classmethod
    def get_ui_field_behaviour(cls) -> dict[str, Any]: ...
    @property
    def client_created(self): ...
