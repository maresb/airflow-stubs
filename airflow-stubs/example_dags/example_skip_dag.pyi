import airflow.models.baseoperator
from airflow.exceptions import AirflowSkipException as AirflowSkipException
from airflow.models.baseoperator import BaseOperator as BaseOperator
from airflow.models.dag import DAG as DAG, dag as dag
from airflow.operators.empty import EmptyOperator as EmptyOperator
from airflow.utils.trigger_rule import TriggerRule as TriggerRule
from typing import ClassVar

TYPE_CHECKING: bool

class EmptySkipOperator(airflow.models.baseoperator.BaseOperator):
    ui_color: ClassVar[str] = ...
    __abstractmethods__: ClassVar[frozenset] = ...
    _abc_impl: ClassVar[_abc_data] = ...
    def execute(self, context: Context): ...
    def __init__(self, *args, **kwargs) -> None: ...
def create_test_pipeline(suffix, trigger_rule): ...
