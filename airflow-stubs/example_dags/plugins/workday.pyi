import airflow.plugins_manager
import airflow.timetables.base
from airflow.plugins_manager import AirflowPlugin as AirflowPlugin
from airflow.timetables.base import DagRunInfo as DagRunInfo, DataInterval as DataInterval, Timetable as Timetable
from pendulum.datetime import DateTime
from typing import ClassVar

TYPE_CHECKING: bool

class AfterWorkdayTimetable(airflow.timetables.base.Timetable):
    __parameters__: ClassVar[tuple] = ...
    _is_protocol: ClassVar[bool] = ...
    __abstractmethods__: ClassVar[frozenset] = ...
    _abc_impl: ClassVar[_abc_data] = ...
    def get_next_workday(self, d: DateTime, incr: int = ...) -> DateTime: ...
    def infer_manual_data_interval(self, run_after: DateTime) -> DataInterval: ...
    def next_dagrun_info(self) -> DagRunInfo | None: ...
    def __subclasshook__(self, other): ...

class WorkdayTimetablePlugin(airflow.plugins_manager.AirflowPlugin):
    name: ClassVar[str] = ...
    timetables: ClassVar[list] = ...
