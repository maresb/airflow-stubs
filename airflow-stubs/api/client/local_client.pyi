from _typeshed import Incomplete
from airflow.api.client import api_client as api_client
from airflow.api.common import delete_dag as delete_dag, trigger_dag as trigger_dag
from airflow.exceptions import AirflowBadRequest as AirflowBadRequest, PoolNotFound as PoolNotFound
from airflow.models.pool import Pool as Pool

class Client(api_client.Client):
    def trigger_dag(self, dag_id, run_id: Incomplete | None = None, conf: Incomplete | None = None, execution_date: Incomplete | None = None, replace_microseconds: bool = True) -> dict | None: ...
    def delete_dag(self, dag_id): ...
    def get_pool(self, name): ...
    def get_pools(self): ...
    def create_pool(self, name, slots, description, include_deferred): ...
    def delete_pool(self, name): ...
    def get_lineage(self, dag_id, execution_date): ...
