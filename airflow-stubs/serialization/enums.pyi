import enum
from typing import ClassVar

class Encoding(str, enum.Enum):
    _member_names_: ClassVar[list] = ...
    _member_map_: ClassVar[dict] = ...
    _member_type_: ClassVar[type[str]] = ...
    _value2member_map_: ClassVar[dict] = ...
    TYPE: ClassVar[Encoding] = ...
    VAR: ClassVar[Encoding] = ...
    def __format__(self, format_spec) -> str: ...
    @classmethod
    def __init__(cls, value) -> None: ...

class DagAttributeTypes(str, enum.Enum):
    _member_names_: ClassVar[list] = ...
    _member_map_: ClassVar[dict] = ...
    _member_type_: ClassVar[type[str]] = ...
    _value2member_map_: ClassVar[dict] = ...
    DAG: ClassVar[DagAttributeTypes] = ...
    OP: ClassVar[DagAttributeTypes] = ...
    DATETIME: ClassVar[DagAttributeTypes] = ...
    TIMEDELTA: ClassVar[DagAttributeTypes] = ...
    TIMEZONE: ClassVar[DagAttributeTypes] = ...
    RELATIVEDELTA: ClassVar[DagAttributeTypes] = ...
    DICT: ClassVar[DagAttributeTypes] = ...
    SET: ClassVar[DagAttributeTypes] = ...
    TUPLE: ClassVar[DagAttributeTypes] = ...
    POD: ClassVar[DagAttributeTypes] = ...
    TASK_GROUP: ClassVar[DagAttributeTypes] = ...
    EDGE_INFO: ClassVar[DagAttributeTypes] = ...
    PARAM: ClassVar[DagAttributeTypes] = ...
    XCOM_REF: ClassVar[DagAttributeTypes] = ...
    DATASET: ClassVar[DagAttributeTypes] = ...
    SIMPLE_TASK_INSTANCE: ClassVar[DagAttributeTypes] = ...
    BASE_JOB: ClassVar[DagAttributeTypes] = ...
    TASK_INSTANCE: ClassVar[DagAttributeTypes] = ...
    DAG_RUN: ClassVar[DagAttributeTypes] = ...
    DAG_MODEL: ClassVar[DagAttributeTypes] = ...
    DATA_SET: ClassVar[DagAttributeTypes] = ...
    LOG_TEMPLATE: ClassVar[DagAttributeTypes] = ...
    CONNECTION: ClassVar[DagAttributeTypes] = ...
    ARG_NOT_SET: ClassVar[DagAttributeTypes] = ...
    def __format__(self, format_spec) -> str: ...
    @classmethod
    def __init__(cls, value) -> None: ...
