import collections
import marshmallow.schema
from _typeshed import Incomplete
from typing import ClassVar

class LogsSchema(marshmallow.schema.Schema):
    __abstractmethods__: ClassVar[frozenset] = ...
    _abc_impl: ClassVar[_abc_data] = ...
    opts: ClassVar[marshmallow.schema.SchemaOpts] = ...
    _declared_fields: ClassVar[dict] = ...
    _hooks: ClassVar[collections.defaultdict] = ...

class LogResponseObject(tuple):
    _fields: ClassVar[tuple] = ...
    _field_defaults: ClassVar[dict] = ...
    _fields_defaults: ClassVar[dict] = ...
    _field_types: ClassVar[dict] = ...
    content: Incomplete
    continuation_token: Incomplete
    def __init__(self, _cls, content: str, continuation_token: str | None) -> None: ...
    def __getnewargs__(self): ...
logs_schema: LogsSchema
