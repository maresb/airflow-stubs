import airflow.utils.timezone as timezone
import typing
from airflow.api_connexion.exceptions import BadRequest as BadRequest
from airflow.configuration import conf as conf
from typing import Any, Callable, Container

TYPE_CHECKING: bool
def validate_istimezone(value: datetime) -> None: ...
def format_datetime(value: str) -> datetime: ...
def check_limit(value: int) -> int: ...

T: typing.TypeVar
def format_parameters(params_formatters: dict[str, Callable[[Any], Any]]) -> Callable[[T], T]: ...
def apply_sorting(query: Select, order_by: str, to_replace: dict[str, str] | None = ..., allowed_attrs: Container[str] | None = ...) -> Select: ...
