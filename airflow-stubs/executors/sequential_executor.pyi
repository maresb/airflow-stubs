import airflow.executors.base_executor
from airflow.executors.base_executor import BaseExecutor as BaseExecutor
from typing import Any, ClassVar

TYPE_CHECKING: bool

class SequentialExecutor(airflow.executors.base_executor.BaseExecutor):
    supports_pickling: ClassVar[bool] = ...
    is_local: ClassVar[bool] = ...
    is_single_threaded: ClassVar[bool] = ...
    is_production: ClassVar[bool] = ...
    serve_logs: ClassVar[bool] = ...
    def __init__(self) -> None: ...
    def execute_async(self, key: TaskInstanceKey, command: CommandType, queue: str | None = ..., executor_config: Any | None = ...) -> None: ...
    def sync(self) -> None: ...
    def end(self): ...
    def terminate(self): ...
