from abc import ABCMeta, abstractmethod
from airflow.models.baseoperator import BaseOperator as BaseOperator
from airflow.models.taskinstancekey import TaskInstanceKey as TaskInstanceKey
from typing import ClassVar

class BaseOperatorLink(metaclass=ABCMeta):
    operators: ClassVar[list[type[BaseOperator]]]
    @property
    @abstractmethod
    def name(self) -> str: ...
    @abstractmethod
    def get_link(self, operator: BaseOperator, *, ti_key: TaskInstanceKey) -> str: ...
    def __init__(self) -> None: ...
    def __lt__(self, other): ...
    def __le__(self, other): ...
    def __gt__(self, other): ...
    def __ge__(self, other): ...
