from _typeshed import Incomplete
from typing import ClassVar

class TaskInstanceKey(tuple):
    _fields: ClassVar[tuple] = ...
    _field_defaults: ClassVar[dict] = ...
    _fields_defaults: ClassVar[dict] = ...
    _field_types: ClassVar[dict] = ...
    dag_id: Incomplete
    task_id: Incomplete
    run_id: Incomplete
    try_number: Incomplete
    map_index: Incomplete
    def __init__(self, _cls, dag_id: str, task_id: str, run_id: str, try_number: int = ..., map_index: int = ...) -> None: ...
    def __getnewargs__(self): ...
    def with_try_number(self, try_number: int) -> TaskInstanceKey: ...
    @property
    def primary(self): ...
    @property
    def reduced(self): ...
    @property
    def key(self): ...
