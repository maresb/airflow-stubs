import gunicorn.app.base
from _typeshed import Incomplete
from airflow.configuration import conf as conf
from airflow.utils.docs import get_docs_url as get_docs_url
from airflow.utils.jwt_signer import JWTSigner as JWTSigner
from airflow.utils.module_loading import import_string as import_string
from typing import ClassVar

def create_app(): ...

class GunicornOption(tuple):
    _fields: ClassVar[tuple] = ...
    _field_defaults: ClassVar[dict] = ...
    _fields_defaults: ClassVar[dict] = ...
    key: Incomplete
    value: Incomplete
    def __init__(self, _cls, key, value) -> None: ...
    def __getnewargs__(self): ...

class StandaloneGunicornApplication(gunicorn.app.base.BaseApplication):
    def __init__(self, app, options: Incomplete | None = ...) -> None: ...
    def load_config(self): ...
    def load(self): ...
def serve_logs(port: Incomplete | None = ...): ...
