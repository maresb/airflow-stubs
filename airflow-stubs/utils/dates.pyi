from _typeshed import Incomplete
from airflow.exceptions import RemovedInAirflow3Warning as RemovedInAirflow3Warning
from airflow.typing_compat import Literal as Literal
from airflow.utils import timezone as timezone
from datetime import datetime, timedelta
from dateutil.relativedelta import relativedelta
from typing import Collection

cron_presets: dict[str, str]

def date_range(start_date: datetime, end_date: datetime | None = None, num: int | None = None, delta: str | timedelta | relativedelta | None = None) -> list[datetime]: ...
def round_time(dt: datetime, delta: str | timedelta | relativedelta, start_date: datetime = ...): ...

TimeUnit: Incomplete

def infer_time_unit(time_seconds_arr: Collection[float]) -> TimeUnit: ...
def scale_time_units(time_seconds_arr: Collection[float], unit: TimeUnit) -> Collection[float]: ...
def days_ago(n, hour: int = 0, minute: int = 0, second: int = 0, microsecond: int = 0): ...
def parse_execution_date(execution_date_str): ...
def datetime_to_nano(datetime) -> int: ...
