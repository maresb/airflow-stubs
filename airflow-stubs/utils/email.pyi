from airflow.configuration import conf as conf
from airflow.exceptions import AirflowConfigException as AirflowConfigException, AirflowException as AirflowException, RemovedInAirflow3Warning as RemovedInAirflow3Warning
from email.mime.multipart import MIMEMultipart
from typing import Any, Iterable

def send_email(to: list[str] | Iterable[str], subject: str, html_content: str, files: list[str] | None = ..., dryrun: bool = ..., cc: str | Iterable[str] | None = ..., bcc: str | Iterable[str] | None = ..., mime_subtype: str = ..., mime_charset: str = ..., conn_id: str | None = ..., custom_headers: dict[str, Any] | None = ..., **kwargs) -> None: ...
def send_email_smtp(to: str | Iterable[str], subject: str, html_content: str, files: list[str] | None = ..., dryrun: bool = ..., cc: str | Iterable[str] | None = ..., bcc: str | Iterable[str] | None = ..., mime_subtype: str = ..., mime_charset: str = ..., conn_id: str = ..., from_email: str | None = ..., custom_headers: dict[str, Any] | None = ..., **kwargs) -> None: ...
def build_mime_message(mail_from: str | None, to: str | Iterable[str], subject: str, html_content: str, files: list[str] | None = ..., cc: str | Iterable[str] | None = ..., bcc: str | Iterable[str] | None = ..., mime_subtype: str = ..., mime_charset: str = ..., custom_headers: dict[str, Any] | None = ...) -> tuple[MIMEMultipart, list[str]]: ...
def send_mime_email(e_from: str, e_to: str | list[str], mime_msg: MIMEMultipart, conn_id: str = ..., dryrun: bool = ...) -> None: ...
def get_email_address_list(addresses: str | Iterable[str]) -> list[str]: ...
