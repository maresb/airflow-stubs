import functools
from airflow.configuration import conf as conf
from airflow.utils.helpers import render_log_filename as render_log_filename
from airflow.utils.log.logging_mixin import ExternalLoggingMixin as ExternalLoggingMixin
from airflow.utils.session import provide_session as provide_session
from airflow.utils.state import TaskInstanceState as TaskInstanceState
from typing import ClassVar, Iterator

TYPE_CHECKING: bool
NEW_SESSION: None

class TaskLogReader:
    STREAM_LOOP_SLEEP_SECONDS: ClassVar[int] = ...
    log_handler: ClassVar[functools.cached_property] = ...
    def read_log_chunks(self, ti: TaskInstance, try_number: int | None, metadata) -> tuple[list[tuple[tuple[str, str]]], dict[str, str]]: ...
    def read_log_stream(self, ti: TaskInstance, try_number: int | None, metadata: dict) -> Iterator[str]: ...
    def render_log_filename(self, *args, **kwargs) -> str: ...
    @property
    def supports_read(self): ...
    @property
    def supports_external_link(self): ...
