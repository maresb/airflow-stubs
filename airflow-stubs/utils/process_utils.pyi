import signal
from _typeshed import Incomplete
from airflow.configuration import conf as conf
from airflow.exceptions import AirflowException as AirflowException
from airflow.utils.platform import IS_WINDOWS as IS_WINDOWS
from typing import Generator

log: Incomplete
DEFAULT_TIME_TO_WAIT_AFTER_SIGTERM: Incomplete

def reap_process_group(process_group_id: int, logger, sig: signal.Signals = ..., timeout: int = ...) -> dict[int, int]: ...
def execute_in_subprocess(cmd: list[str], cwd: str | None = None, env: dict | None = None) -> None: ...
def execute_in_subprocess_with_kwargs(cmd: list[str], **kwargs) -> None: ...
def execute_interactive(cmd: list[str], **kwargs) -> None: ...
def kill_child_processes_by_pids(pids_to_kill: list[int], timeout: int = 5) -> None: ...
def patch_environ(new_env_variables: dict[str, str]) -> Generator[None, None, None]: ...
def check_if_pidfile_process_is_running(pid_file: str, process_name: str): ...
def set_new_process_group() -> None: ...
