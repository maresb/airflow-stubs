import airflow.settings as settings
import airflow.utils.cli_action_loggers as cli_action_loggers
import typing
from _typeshed import Incomplete
from airflow.exceptions import AirflowException as AirflowException, RemovedInAirflow3Warning as RemovedInAirflow3Warning
from airflow.utils.log.non_caching_file_handler import NonCachingFileHandler as NonCachingFileHandler
from airflow.utils.platform import getuser as getuser, is_terminal_support_colors as is_terminal_support_colors
from airflow.utils.session import provide_session as provide_session
from typing import ClassVar

TYPE_CHECKING: bool
NEW_SESSION: None
T: typing.TypeVar
def action_cli(func: Incomplete | None = ..., check_db: bool = ...): ...
def process_subdir(subdir: str | None): ...
def get_dag_by_file_location(dag_id: str): ...
def get_dag(subdir: str | None, dag_id: str, from_db: bool = ...) -> DAG: ...
def get_dags(subdir: str | None, dag_id: str, use_regex: bool = ...): ...
def get_dag_by_pickle(*args, **kwargs) -> DAG: ...
def setup_locations(process, pid: Incomplete | None = ..., stdout: Incomplete | None = ..., stderr: Incomplete | None = ..., log: Incomplete | None = ...): ...
def setup_logging(filename): ...
def sigint_handler(sig, frame): ...
def sigquit_handler(sig, frame): ...

class ColorMode:
    ON: ClassVar[str] = ...
    OFF: ClassVar[str] = ...
    AUTO: ClassVar[str] = ...
def should_use_colors(args) -> bool: ...
def should_ignore_depends_on_past(args) -> bool: ...
def suppress_logs_and_warning(f: T) -> T: ...
