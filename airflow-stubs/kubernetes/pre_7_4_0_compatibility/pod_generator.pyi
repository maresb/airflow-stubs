import airflow.utils.yaml as yaml
import datetime
import k8s
from airflow.exceptions import AirflowConfigException as AirflowConfigException, PodMutationHookException as PodMutationHookException, PodReconciliationError as PodReconciliationError, RemovedInAirflow3Warning as RemovedInAirflow3Warning
from airflow.kubernetes.pre_7_4_0_compatibility.pod_generator_deprecated import PodDefaults as PodDefaults, PodGeneratorDeprecated as PodGeneratorDeprecated
from airflow.utils.hashlib_wrapper import md5 as md5

TYPE_CHECKING: bool
airflow_version: str
MAX_LABEL_LEN: int
alphanum_lower: str
def rand_str(num): ...
def add_pod_suffix(pod_name: str, rand_len: int = ..., max_len: int = ...) -> str: ...
def make_safe_label_value(string: str) -> str: ...
def datetime_to_label_safe_datestring(datetime_obj: datetime.datetime) -> str: ...
def label_safe_datestring_to_datetime(string: str) -> datetime.datetime: ...

class PodGenerator:
    def __init__(self, pod: k8s.V1Pod | None = ..., pod_template_file: str | None = ..., extract_xcom: bool = ...) -> None: ...
    def gen_pod(self) -> k8s.V1Pod: ...
    @staticmethod
    def add_xcom_sidecar(pod: k8s.V1Pod) -> k8s.V1Pod: ...
    @staticmethod
    def from_obj(obj) -> dict | k8s.V1Pod | None: ...
    @staticmethod
    def from_legacy_obj(obj) -> k8s.V1Pod | None: ...
    @staticmethod
    def reconcile_pods(base_pod: k8s.V1Pod, client_pod: k8s.V1Pod | None) -> k8s.V1Pod: ...
    @staticmethod
    def reconcile_metadata(base_meta, client_meta): ...
    @staticmethod
    def reconcile_specs(base_spec: k8s.V1PodSpec | None, client_spec: k8s.V1PodSpec | None) -> k8s.V1PodSpec | None: ...
    @staticmethod
    def reconcile_containers(base_containers: list[k8s.V1Container], client_containers: list[k8s.V1Container]) -> list[k8s.V1Container]: ...
    @classmethod
    def construct_pod(cls, dag_id: str, task_id: str, pod_id: str, try_number: int, kube_image: str, date: datetime.datetime | None, args: list[str], pod_override_object: k8s.V1Pod | None, base_worker_pod: k8s.V1Pod, namespace: str, scheduler_job_id: str, run_id: str | None = ..., map_index: int = ...) -> k8s.V1Pod: ...
    @classmethod
    def build_selector_for_k8s_executor_pod(cls): ...
    @classmethod
    def build_labels_for_k8s_executor_pod(cls): ...
    @staticmethod
    def serialize_pod(pod: k8s.V1Pod) -> dict: ...
    @staticmethod
    def deserialize_model_file(path: str) -> k8s.V1Pod: ...
    @staticmethod
    def deserialize_model_dict(pod_dict: dict | None) -> k8s.V1Pod: ...
    @staticmethod
    def make_unique_pod_id(pod_id: str) -> str | None: ...
def merge_objects(base_obj, client_obj): ...
def extend_object_field(base_obj, client_obj, field_name): ...
