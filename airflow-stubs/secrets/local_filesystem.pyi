import airflow.secrets.base_secrets
import airflow.utils.log.logging_mixin
import airflow.utils.yaml as yaml
from airflow.exceptions import AirflowException as AirflowException, AirflowFileParseException as AirflowFileParseException, ConnectionNotUnique as ConnectionNotUnique, FileSyntaxError as FileSyntaxError, RemovedInAirflow3Warning as RemovedInAirflow3Warning
from airflow.secrets.base_secrets import BaseSecretsBackend as BaseSecretsBackend
from airflow.utils.log.logging_mixin import LoggingMixin as LoggingMixin
from typing import Any, ClassVar

TYPE_CHECKING: bool
def get_connection_parameter_names() -> set[str]: ...

FILE_PARSERS: dict
def load_variables(file_path: str) -> dict[str, str]: ...
def load_connections(file_path) -> dict[str, list[Any]]: ...
def load_connections_dict(file_path: str) -> dict[str, Any]: ...

class LocalFilesystemBackend(airflow.secrets.base_secrets.BaseSecretsBackend, airflow.utils.log.logging_mixin.LoggingMixin):
    __abstractmethods__: ClassVar[frozenset] = ...
    _abc_impl: ClassVar[_abc_data] = ...
    def __init__(self, variables_file_path: str | None = ..., connections_file_path: str | None = ...) -> None: ...
    def get_connection(self, conn_id: str) -> Connection | None: ...
    def get_connections(self, conn_id: str) -> list[Any]: ...
    def get_variable(self, key: str) -> str | None: ...
