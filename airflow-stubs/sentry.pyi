from _typeshed import Incomplete
from airflow.configuration import conf as conf
from airflow.executors.executor_loader import ExecutorLoader as ExecutorLoader
from airflow.models.taskinstance import TaskInstance as TaskInstance
from airflow.utils.session import find_session_idx as find_session_idx, provide_session as provide_session
from airflow.utils.state import TaskInstanceState as TaskInstanceState
from sqlalchemy.orm import Session as Session

log: Incomplete

class DummySentry:
    def add_tagging(self, task_instance) -> None: ...
    def add_breadcrumbs(self, task_instance, session: Session | None = None): ...
    def enrich_errors(self, run): ...
    def flush(self) -> None: ...

Sentry: DummySentry

class ConfiguredSentry(DummySentry):
    SCOPE_DAG_RUN_TAGS: Incomplete
    SCOPE_TASK_INSTANCE_TAGS: Incomplete
    SCOPE_CRUMBS: Incomplete
    UNSUPPORTED_SENTRY_OPTIONS: Incomplete
    def __init__(self) -> None: ...
    def add_tagging(self, task_instance) -> None: ...
    def add_breadcrumbs(self, task_instance: TaskInstance, session: Session | None = None) -> None: ...
    def enrich_errors(self, func): ...
    def flush(self) -> None: ...
