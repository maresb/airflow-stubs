import abc
import airflow.utils.log.logging_mixin
from airflow.utils.log.logging_mixin import LoggingMixin as LoggingMixin
from typing import Any, AsyncIterator, ClassVar

class BaseTrigger(abc.ABC, airflow.utils.log.logging_mixin.LoggingMixin):
    __abstractmethods__: ClassVar[frozenset] = ...
    _abc_impl: ClassVar[_abc_data] = ...
    def __init__(self, **kwargs) -> None: ...
    def serialize(self) -> tuple[str, dict[str, Any]]: ...
    def run(self) -> AsyncIterator[TriggerEvent]: ...
    def cleanup(self) -> None: ...

class TriggerEvent:
    def __init__(self, payload: Any) -> None: ...
    def __eq__(self, other) -> bool: ...
