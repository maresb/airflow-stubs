from _typeshed import Incomplete
from airflow.configuration import conf as conf
from airflow.metrics.protocols import DeltaType as DeltaType, Timer as Timer, TimerProtocol as TimerProtocol
from airflow.metrics.validators import AllowListValidator as AllowListValidator, BlockListValidator as BlockListValidator, ListValidator as ListValidator, get_validator as get_validator, validate_stat as validate_stat
from datadog import DogStatsd

log: Incomplete

class SafeDogStatsdLogger:
    dogstatsd: Incomplete
    metrics_validator: Incomplete
    metrics_tags: Incomplete
    metric_tags_validator: Incomplete
    def __init__(self, dogstatsd_client: DogStatsd, metrics_validator: ListValidator = ..., metrics_tags: bool = False, metric_tags_validator: ListValidator = ...) -> None: ...
    def incr(self, stat: str, count: int = 1, rate: float = 1, *, tags: dict[str, str] | None = None) -> None: ...
    def decr(self, stat: str, count: int = 1, rate: float = 1, *, tags: dict[str, str] | None = None) -> None: ...
    def gauge(self, stat: str, value: int | float, rate: float = 1, delta: bool = False, *, tags: dict[str, str] | None = None) -> None: ...
    def timing(self, stat: str, dt: DeltaType, *, tags: dict[str, str] | None = None) -> None: ...
    def timer(self, stat: str | None = None, tags: dict[str, str] | None = None, **kwargs) -> TimerProtocol: ...

def get_dogstatsd_logger(cls) -> SafeDogStatsdLogger: ...
