import datetime
from _typeshed import Incomplete
from airflow.typing_compat import Protocol as Protocol

DeltaType = int | float | datetime.timedelta

class TimerProtocol(Protocol):
    def __enter__(self) -> Timer: ...
    def __exit__(self, exc_type: type[BaseException] | None, exc_value: BaseException | None, traceback: types.TracebackType | None) -> None: ...
    def start(self) -> Timer: ...
    def stop(self, send: bool = True) -> None: ...

class Timer(TimerProtocol):
    duration: float | None
    real_timer: Incomplete
    def __init__(self, real_timer: Timer | None = None) -> None: ...
    def __enter__(self) -> Timer: ...
    def __exit__(self, exc_type: type[BaseException] | None, exc_value: BaseException | None, traceback: types.TracebackType | None) -> None: ...
    def start(self) -> Timer: ...
    def stop(self, send: bool = True) -> None: ...
