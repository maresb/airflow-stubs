import dataclasses
import enum
from typing import ClassVar

class ConfigurationDetails:
    section: ClassVar[None] = ...
    __dataclass_params__: ClassVar[dataclasses._DataclassParams] = ...
    __dataclass_fields__: ClassVar[dict] = ...
    def __init__(self, section: str | None = ...) -> None: ...
    def __eq__(self, other) -> bool: ...

class ConnectionDetails:
    conn_id: ClassVar[None] = ...
    __dataclass_params__: ClassVar[dataclasses._DataclassParams] = ...
    __dataclass_fields__: ClassVar[dict] = ...
    def __init__(self, conn_id: str | None = ...) -> None: ...
    def __eq__(self, other) -> bool: ...

class DagDetails:
    id: ClassVar[None] = ...
    __dataclass_params__: ClassVar[dataclasses._DataclassParams] = ...
    __dataclass_fields__: ClassVar[dict] = ...
    def __init__(self, id: str | None = ...) -> None: ...
    def __eq__(self, other) -> bool: ...

class DatasetDetails:
    uri: ClassVar[None] = ...
    __dataclass_params__: ClassVar[dataclasses._DataclassParams] = ...
    __dataclass_fields__: ClassVar[dict] = ...
    def __init__(self, uri: str | None = ...) -> None: ...
    def __eq__(self, other) -> bool: ...

class PoolDetails:
    name: ClassVar[None] = ...
    __dataclass_params__: ClassVar[dataclasses._DataclassParams] = ...
    __dataclass_fields__: ClassVar[dict] = ...
    def __init__(self, name: str | None = ...) -> None: ...
    def __eq__(self, other) -> bool: ...

class VariableDetails:
    key: ClassVar[None] = ...
    __dataclass_params__: ClassVar[dataclasses._DataclassParams] = ...
    __dataclass_fields__: ClassVar[dict] = ...
    def __init__(self, key: str | None = ...) -> None: ...
    def __eq__(self, other) -> bool: ...

class AccessView(enum.Enum):
    _member_names_: ClassVar[list] = ...
    _member_map_: ClassVar[dict] = ...
    _member_type_: ClassVar[type[object]] = ...
    _value2member_map_: ClassVar[dict] = ...
    CLUSTER_ACTIVITY: ClassVar[AccessView] = ...
    DOCS: ClassVar[AccessView] = ...
    IMPORT_ERRORS: ClassVar[AccessView] = ...
    JOBS: ClassVar[AccessView] = ...
    PLUGINS: ClassVar[AccessView] = ...
    PROVIDERS: ClassVar[AccessView] = ...
    TRIGGERS: ClassVar[AccessView] = ...
    WEBSITE: ClassVar[AccessView] = ...
    @classmethod
    def __init__(cls, value) -> None: ...

class DagAccessEntity(enum.Enum):
    _member_names_: ClassVar[list] = ...
    _member_map_: ClassVar[dict] = ...
    _member_type_: ClassVar[type[object]] = ...
    _value2member_map_: ClassVar[dict] = ...
    AUDIT_LOG: ClassVar[DagAccessEntity] = ...
    CODE: ClassVar[DagAccessEntity] = ...
    DEPENDENCIES: ClassVar[DagAccessEntity] = ...
    RUN: ClassVar[DagAccessEntity] = ...
    SLA_MISS: ClassVar[DagAccessEntity] = ...
    TASK: ClassVar[DagAccessEntity] = ...
    TASK_INSTANCE: ClassVar[DagAccessEntity] = ...
    TASK_RESCHEDULE: ClassVar[DagAccessEntity] = ...
    TASK_LOGS: ClassVar[DagAccessEntity] = ...
    WARNING: ClassVar[DagAccessEntity] = ...
    XCOM: ClassVar[DagAccessEntity] = ...
    @classmethod
    def __init__(cls, value) -> None: ...
