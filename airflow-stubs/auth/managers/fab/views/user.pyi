import airflow.security.permissions as permissions
import flask_appbuilder.security.views
from _typeshed import Incomplete
from typing import ClassVar

class MultiResourceUserMixin:
    _class_permission_name: ClassVar[str] = ...
    class_permission_name_mapping: ClassVar[dict] = ...
    method_permission_name: ClassVar[dict] = ...
    base_permissions: ClassVar[list] = ...
    class_permission_name: Incomplete
    def show(self, *args, **kwargs): ...

class CustomUserLDAPModelView(MultiResourceUserMixin, flask_appbuilder.security.views.UserLDAPModelView):
    _class_permission_name: ClassVar[str] = ...
    class_permission_name_mapping: ClassVar[dict] = ...
    method_permission_name: ClassVar[dict] = ...
    base_permissions: ClassVar[list] = ...

class CustomUserOAuthModelView(MultiResourceUserMixin, flask_appbuilder.security.views.UserOAuthModelView): ...
class CustomUserOIDModelView(MultiResourceUserMixin, flask_appbuilder.security.views.UserOIDModelView): ...

class CustomUserRemoteUserModelView(MultiResourceUserMixin, flask_appbuilder.security.views.UserRemoteUserModelView):
    _class_permission_name: ClassVar[str] = ...
    class_permission_name_mapping: ClassVar[dict] = ...
    method_permission_name: ClassVar[dict] = ...
    base_permissions: ClassVar[list] = ...

class CustomUserDBModelView(MultiResourceUserMixin, flask_appbuilder.security.views.UserDBModelView):
    _class_permission_name: ClassVar[str] = ...
    class_permission_name_mapping: ClassVar[dict] = ...
    method_permission_name: ClassVar[dict] = ...
    base_permissions: ClassVar[list] = ...
