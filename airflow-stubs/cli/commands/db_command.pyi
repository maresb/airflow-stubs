import airflow.settings as settings
import airflow.utils.cli as cli_utils
import airflow.utils.db as db
from airflow.exceptions import AirflowException as AirflowException
from airflow.utils.db_cleanup import drop_archived_tables as drop_archived_tables, export_archived_records as export_archived_records, run_cleanup as run_cleanup
from airflow.utils.process_utils import execute_interactive as execute_interactive
from airflow.utils.providers_configuration_loader import providers_configuration_loaded as providers_configuration_loaded

TYPE_CHECKING: bool
config_dict: dict
def initdb(*args, **kwargs): ...
def resetdb(*args, **kwargs): ...
def upgradedb(args): ...
def get_version_revision(version: str, recursion_limit: int = ...) -> str | None: ...
def migratedb(*args, **kwargs): ...
def downgrade(*args, **kwargs): ...
def check_migrations(*args, **kwargs): ...
def shell(*args, **kwargs): ...
def check(*args, **kwargs): ...

all_tables: list
def cleanup_tables(*args, **kwargs): ...
def export_archived(*args, **kwargs): ...
def drop_archived(*args, **kwargs): ...
