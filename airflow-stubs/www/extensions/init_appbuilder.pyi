import airflow.settings as settings
from _typeshed import Incomplete
from airflow.configuration import conf as conf
from airflow.www.extensions.init_auth_manager import get_auth_manager as get_auth_manager, init_auth_manager as init_auth_manager
from typing import ClassVar

TYPE_CHECKING: bool
__version__: str
LOGMSG_ERR_FAB_ADD_PERMISSION_MENU: str
LOGMSG_ERR_FAB_ADD_PERMISSION_VIEW: str
LOGMSG_ERR_FAB_ADDON_IMPORT: str
LOGMSG_ERR_FAB_ADDON_PROCESS: str
LOGMSG_INF_FAB_ADD_VIEW: str
LOGMSG_INF_FAB_ADDON_ADDED: str
LOGMSG_WAR_FAB_VIEW_EXISTS: str
def dynamic_class_import(class_path): ...

class AirflowAppBuilder:
    baseviews: ClassVar[list] = ...
    app: ClassVar[None] = ...
    session: ClassVar[None] = ...
    bm: ClassVar[None] = ...
    menu: ClassVar[None] = ...
    indexview: ClassVar[None] = ...
    static_folder: ClassVar[None] = ...
    static_url_path: ClassVar[None] = ...
    template_filters: ClassVar[None] = ...
    def __init__(self, app: Incomplete | None = ..., session: Session | None = ..., menu: Incomplete | None = ..., indexview: Incomplete | None = ..., base_template: str = ..., static_folder: str = ..., static_url_path: str = ..., update_perms: bool = ..., auth_rate_limited: bool = ..., auth_rate_limit: str = ...) -> None: ...
    def init_app(self, app, session): ...
    def post_init(self): ...
    def add_view(self, baseview, name, href: str = ..., icon: str = ..., label: str = ..., category: str = ..., category_icon: str = ..., category_label: str = ..., menu_cond: Incomplete | None = ...): ...
    def add_link(self, name, href, icon: str = ..., label: str = ..., category: str = ..., category_icon: str = ..., category_label: str = ..., baseview: Incomplete | None = ..., cond: Incomplete | None = ...): ...
    def add_separator(self, category, cond: Incomplete | None = ...): ...
    def add_view_no_menu(self, baseview, endpoint: Incomplete | None = ..., static_folder: Incomplete | None = ...): ...
    def security_cleanup(self): ...
    def security_converge(self, dry: bool = ...) -> dict: ...
    def get_url_for_login_with(self, next_url: str | None = ...) -> str: ...
    def get_url_for_locale(self, lang): ...
    def add_limits(self, baseview) -> None: ...
    def add_permissions(self, update_perms: bool = ...): ...
    def register_blueprint(self, baseview, endpoint: Incomplete | None = ..., static_folder: Incomplete | None = ...): ...
    @property
    def get_app(self): ...
    @property
    def get_session(self): ...
    @property
    def app_name(self): ...
    @property
    def app_theme(self): ...
    @property
    def app_icon(self): ...
    @property
    def languages(self): ...
    @property
    def version(self): ...
    @property
    def get_url_for_login(self): ...
    @property
    def get_url_for_index(self): ...
def init_appbuilder(app: Flask) -> AirflowAppBuilder: ...
