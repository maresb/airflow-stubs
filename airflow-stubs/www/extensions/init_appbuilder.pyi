from _typeshed import Incomplete
from airflow import settings as settings
from airflow.configuration import conf as conf
from airflow.www.extensions.init_auth_manager import get_auth_manager as get_auth_manager, init_auth_manager as init_auth_manager
from flask import Flask as Flask
from flask_appbuilder import BaseView as BaseView
from flask_appbuilder.security.manager import BaseSecurityManager as BaseSecurityManager
from sqlalchemy.orm import Session as Session

log: Incomplete

def dynamic_class_import(class_path): ...

class AirflowAppBuilder:
    baseviews: list[BaseView | Session]
    app: Incomplete
    session: Incomplete
    sm: BaseSecurityManager
    bm: Incomplete
    addon_managers: dict
    menu: Incomplete
    indexview: Incomplete
    static_folder: Incomplete
    static_url_path: Incomplete
    template_filters: Incomplete
    base_template: Incomplete
    update_perms: Incomplete
    auth_rate_limited: Incomplete
    auth_rate_limit: Incomplete
    def __init__(self, app: Incomplete | None = None, session: Session | None = None, menu: Incomplete | None = None, indexview: Incomplete | None = None, base_template: str = 'airflow/main.html', static_folder: str = 'static/appbuilder', static_url_path: str = '/appbuilder') -> None: ...
    def init_app(self, app, session) -> None: ...
    def post_init(self) -> None: ...
    @property
    def get_app(self): ...
    @property
    def get_session(self): ...
    @property
    def app_name(self): ...
    @property
    def require_confirmation_dag_change(self): ...
    @property
    def app_theme(self): ...
    @property
    def app_icon(self): ...
    @property
    def languages(self): ...
    @property
    def version(self): ...
    def add_view(self, baseview, name, href: str = '', icon: str = '', label: str = '', category: str = '', category_icon: str = '', category_label: str = '', menu_cond: Incomplete | None = None): ...
    def add_link(self, name, href, icon: str = '', label: str = '', category: str = '', category_icon: str = '', category_label: str = '', baseview: Incomplete | None = None, cond: Incomplete | None = None) -> None: ...
    def add_separator(self, category, cond: Incomplete | None = None) -> None: ...
    def add_view_no_menu(self, baseview, endpoint: Incomplete | None = None, static_folder: Incomplete | None = None): ...
    def security_cleanup(self) -> None: ...
    def security_converge(self, dry: bool = False) -> dict: ...
    def get_url_for_login_with(self, next_url: str | None = None) -> str: ...
    @property
    def get_url_for_login(self): ...
    @property
    def get_url_for_index(self): ...
    def get_url_for_locale(self, lang): ...
    def add_limits(self, baseview) -> None: ...
    def add_permissions(self, update_perms: bool = False) -> None: ...
    def register_blueprint(self, baseview, endpoint: Incomplete | None = None, static_folder: Incomplete | None = None) -> None: ...

def init_appbuilder(app: Flask) -> AirflowAppBuilder: ...
